import{j as l,r as s,e as d,I as D}from"./index-CcyABReA.js";import{f as L,u as v,c as G,a as k}from"./index-BXwgaSlv.js";import{c as y,R as B,b as Y,P as q,W as Z,C as J,T as K,D as Q,a as x,O as U}from"./index-Bf-H7HrM.js";var X=s.forwardRef((e,t)=>{const{children:a,...r}=e,o=s.Children.toArray(a),n=o.find(ee);if(n){const i=n.props.children,p=o.map(g=>g===n?s.Children.count(i)>1?s.Children.only(null):s.isValidElement(i)?i.props.children:null:g);return l.jsx(m,{...r,ref:t,children:s.isValidElement(i)?s.cloneElement(i,void 0,p):null})}return l.jsx(m,{...r,ref:t,children:a})});X.displayName="Slot";var m=s.forwardRef((e,t)=>{const{children:a,...r}=e;if(s.isValidElement(a)){const o=ae(a),n=te(r,a.props);return a.type!==s.Fragment&&(n.ref=t?L(t,o):o),s.cloneElement(a,n)}return s.Children.count(a)>1?s.Children.only(null):null});m.displayName="SlotClone";var N=({children:e})=>l.jsx(l.Fragment,{children:e});function ee(e){return s.isValidElement(e)&&e.type===N}function te(e,t){const a={...t};for(const r in t){const o=e[r],n=t[r];/^on[A-Z]/.test(r)?o&&n?a[r]=(...p)=>{n(...p),o(...p)}:o&&(a[r]=o):r==="style"?a[r]={...o,...n}:r==="className"&&(a[r]=[o,n].filter(Boolean).join(" "))}return{...e,...a}}function ae(e){var r,o;let t=(r=Object.getOwnPropertyDescriptor(e.props,"ref"))==null?void 0:r.get,a=t&&"isReactWarning"in t&&t.isReactWarning;return a?e.ref:(t=(o=Object.getOwnPropertyDescriptor(e,"ref"))==null?void 0:o.get,a=t&&"isReactWarning"in t&&t.isReactWarning,a?e.props.ref:e.props.ref||e.ref)}var R="AlertDialog",[re,Ce]=G(R,[y]),c=y(),h=e=>{const{__scopeAlertDialog:t,...a}=e,r=c(t);return l.jsx(B,{...r,...a,modal:!0})};h.displayName=R;var oe="AlertDialogTrigger",j=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,o=c(a);return l.jsx(Y,{...o,...r,ref:t})});j.displayName=oe;var se="AlertDialogPortal",C=e=>{const{__scopeAlertDialog:t,...a}=e,r=c(t);return l.jsx(q,{...r,...a})};C.displayName=se;var le="AlertDialogOverlay",E=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,o=c(a);return l.jsx(U,{...o,...r,ref:t})});E.displayName=le;var f="AlertDialogContent",[ne,ie]=re(f),_=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,children:r,...o}=e,n=c(a),i=s.useRef(null),p=v(t,i),g=s.useRef(null);return l.jsx(Z,{contentName:f,titleName:b,docsSlug:"alert-dialog",children:l.jsx(ne,{scope:a,cancelRef:g,children:l.jsxs(J,{role:"alertdialog",...n,...o,ref:p,onOpenAutoFocus:k(o.onOpenAutoFocus,u=>{var A;u.preventDefault(),(A=g.current)==null||A.focus({preventScroll:!0})}),onPointerDownOutside:u=>u.preventDefault(),onInteractOutside:u=>u.preventDefault(),children:[l.jsx(N,{children:r}),l.jsx(de,{contentRef:i})]})})})});_.displayName=f;var b="AlertDialogTitle",w=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,o=c(a);return l.jsx(K,{...o,...r,ref:t})});w.displayName=b;var P="AlertDialogDescription",S=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,o=c(a);return l.jsx(Q,{...o,...r,ref:t})});S.displayName=P;var ce="AlertDialogAction",O=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,o=c(a);return l.jsx(x,{...o,...r,ref:t})});O.displayName=ce;var T="AlertDialogCancel",$=s.forwardRef((e,t)=>{const{__scopeAlertDialog:a,...r}=e,{cancelRef:o}=ie(T,a),n=c(a),i=v(t,o);return l.jsx(x,{...n,...r,ref:i})});$.displayName=T;var de=({contentRef:e})=>{const t=`\`${f}\` requires a description for the component to be accessible for screen reader users.

You can add a description to the \`${f}\` by passing a \`${P}\` component as a child, which also benefits sighted users by adding visible context to the dialog.

Alternatively, you can use your own component as a description by assigning it an \`id\` and passing the same value to the \`aria-describedby\` prop in \`${f}\`. If the description is confusing or duplicative for sighted users, you can use the \`@radix-ui/react-visually-hidden\` primitive as a wrapper around your description component.

For more information, see https://radix-ui.com/primitives/docs/components/alert-dialog`;return s.useEffect(()=>{var r;document.getElementById((r=e.current)==null?void 0:r.getAttribute("aria-describedby"))||console.warn(t)},[t,e]),null},pe=h,fe=j,ge=C,M=E,I=_,V=O,W=$,F=w,H=S;const Ee=pe,_e=fe,ue=ge,z=s.forwardRef(({className:e,...t},a)=>l.jsx(M,{className:d("fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0",e),...t,ref:a}));z.displayName=M.displayName;const me=s.forwardRef(({className:e,...t},a)=>l.jsxs(ue,{children:[l.jsx(z,{}),l.jsx(I,{ref:a,className:d("fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg",e),...t})]}));me.displayName=I.displayName;const Ae=({className:e,...t})=>l.jsx("div",{className:d("flex flex-col space-y-2 text-center sm:text-left",e),...t});Ae.displayName="AlertDialogHeader";const De=({className:e,...t})=>l.jsx("div",{className:d("flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2",e),...t});De.displayName="AlertDialogFooter";const ve=s.forwardRef(({className:e,...t},a)=>l.jsx(F,{ref:a,className:d("text-lg font-semibold",e),...t}));ve.displayName=F.displayName;const ye=s.forwardRef(({className:e,...t},a)=>l.jsx(H,{ref:a,className:d("text-sm text-muted-foreground",e),...t}));ye.displayName=H.displayName;const xe=s.forwardRef(({className:e,...t},a)=>l.jsx(V,{ref:a,className:d(D(),e),...t}));xe.displayName=V.displayName;const Ne=s.forwardRef(({className:e,...t},a)=>l.jsx(W,{ref:a,className:d(D({variant:"outline"}),"mt-2 sm:mt-0",e),...t}));Ne.displayName=W.displayName;export{Ee as A,me as a,Ae as b,ve as c,De as d,_e as e,ye as f,Ne as g,xe as h};
